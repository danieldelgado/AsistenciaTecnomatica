/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import dominio.Asistencia;
import dominio.Empleado;
import dominio.OrdenarAsistenciaPorId;
import dominio.dao.AsistenciaDao;
import dominio.dao.EmpleadoDao;
import dominio.dao.imp.AsistenciaDaoImp;
import dominio.dao.imp.EmpleadoDaoImp;
import estudiandojmf.miPlayer;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import Util.DetalleReporte;
import Util.FechaUtil;
import Util.ReporteAsitenciaJRDataSource;
import Util.TablaUtil;

import dominio.Asistencia;
import dominio.Empleado;
import dominio.OrdenarAsistenciaPorId;
import dominio.dao.AsistenciaDao;
import dominio.dao.EmpleadoDao;
import dominio.dao.imp.AsistenciaDaoImp;
import dominio.dao.imp.EmpleadoDaoImp;
import java.awt.Image;
import java.awt.image.RenderedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.media.Player;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author Leo
 */
public class ListadoPersonal extends javax.swing.JDialog {
    Set<Asistencia> conjunto;
    DefaultTableModel modelo;
    private Set<Asistencia> conjuntoAsistencia2=null;
    /**
     * Creates new form ListadoPersonal
     */
    public ListadoPersonal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //las fechas por defectos desabikitada porque rbtn  en fecha  actual
        dateInicio.setDate(new Date());
        dateFin.setDate(new Date());
        deshabilitarFechas();
        // por defecto el cmbBusqueda esta en Todos los empleados entonces inactivo txtbusqueda ybtnbusq
        inactivarBusqueda();
        setLocationRelativeTo(parent);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelTranslucidoComplete21 = new org.edisoncor.gui.panel.PanelTranslucidoComplete2();
        labelMetric1 = new org.edisoncor.gui.label.LabelMetric();
        cmbBusqueda = new org.edisoncor.gui.comboBox.ComboBoxRound();
        txtBusqueda = new org.edisoncor.gui.textField.TextFieldRoundIcon();
        panelShadow1 = new org.edisoncor.gui.panel.PanelShadow();
        rdbHoy = new javax.swing.JRadioButton();
        rdbMes = new javax.swing.JRadioButton();
        rdbFecha = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        dateInicio = new com.toedter.calendar.JDateChooser();
        dateFin = new com.toedter.calendar.JDateChooser();
        btnBuscar = new org.edisoncor.gui.button.ButtonIpod();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAsistencia = new org.jdesktop.swingx.JXTable();
        btnImprimir = new org.edisoncor.gui.button.ButtonIpod();
        btnIreport = new org.edisoncor.gui.button.ButtonIpod();
        btnSalir = new org.edisoncor.gui.button.ButtonIpod();
        btnBusquedaPersonal = new org.edisoncor.gui.button.ButtonIcon();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelTranslucidoComplete21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BUSQUEDA DE EMPLEADOS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 28))); // NOI18N
        panelTranslucidoComplete21.setOpaque(false);

        labelMetric1.setText("Busqueda");

        cmbBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODO LOS EMPLEADOS", "LEGAJO" }));
        cmbBusqueda.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        cmbBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbBusquedaItemStateChanged(evt);
            }
        });
        cmbBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBusquedaActionPerformed(evt);
            }
        });

        panelShadow1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FILTRO", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        panelShadow1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(rdbHoy);
        rdbHoy.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        rdbHoy.setSelected(true);
        rdbHoy.setText("Hoy");
        rdbHoy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHoyActionPerformed(evt);
            }
        });
        panelShadow1.add(rdbHoy, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        buttonGroup1.add(rdbMes);
        rdbMes.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        rdbMes.setText("Mes Actual");
        rdbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMesActionPerformed(evt);
            }
        });
        panelShadow1.add(rdbMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        rdbFecha.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdbFecha);
        rdbFecha.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        rdbFecha.setText("Entre las Fechas");
        rdbFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFechaActionPerformed(evt);
            }
        });
        panelShadow1.add(rdbFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setText("Y");
        panelShadow1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, -1, -1));

        dateInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dateInicio.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        panelShadow1.add(dateInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 130, -1));

        dateFin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dateFin.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        dateFin.setMaxSelectableDate(new java.util.Date(253370775670000L));
        panelShadow1.add(dateFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, 130, -1));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BUSCAR2.jpg"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblAsistencia.setBackground(new java.awt.Color(135, 133, 133));
        tblAsistencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "LEGAJO", "EMPLEADO", "ESTADO", "FECHA", "HORA"
            }
        ));
        jScrollPane1.setViewportView(tblAsistencia);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IMPRIMIR.jpg"))); // NOI18N
        btnImprimir.setText("IMPRIMIR");

        btnIreport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PDF1.png"))); // NOI18N
        btnIreport.setText("PDF");
        btnIreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIreportActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/SALIR.jpg"))); // NOI18N
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnBusquedaPersonal.setBackground(java.awt.SystemColor.controlDkShadow);
        btnBusquedaPersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/binoculares.jpg"))); // NOI18N
        btnBusquedaPersonal.setText("buttonIcon1");
        btnBusquedaPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaPersonalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTranslucidoComplete21Layout = new javax.swing.GroupLayout(panelTranslucidoComplete21);
        panelTranslucidoComplete21.setLayout(panelTranslucidoComplete21Layout);
        panelTranslucidoComplete21Layout.setHorizontalGroup(
            panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTranslucidoComplete21Layout.createSequentialGroup()
                .addGroup(panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTranslucidoComplete21Layout.createSequentialGroup()
                        .addGroup(panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTranslucidoComplete21Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(cmbBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBusquedaPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelTranslucidoComplete21Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(209, 209, 209)
                                .addComponent(btnIreport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(228, 228, 228)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelTranslucidoComplete21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTranslucidoComplete21Layout.createSequentialGroup()
                                .addComponent(panelShadow1, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        panelTranslucidoComplete21Layout.setVerticalGroup(
            panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTranslucidoComplete21Layout.createSequentialGroup()
                .addGroup(panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBusquedaPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelTranslucidoComplete21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelShadow1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTranslucidoComplete21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnIreport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTranslucidoComplete21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTranslucidoComplete21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIreportActionPerformed
             // validar el empleado
   EmpleadoDao empleados = new EmpleadoDaoImp();
   List<Empleado> lisaEmpleado = empleados.listarEmpleado();
   boolean encontrado = false;
   Empleado e = null ;
   for ( Empleado empleado : lisaEmpleado) {
       if (empleado.getLegajo()==Integer.parseInt(txtBusqueda.getText())) {
           encontrado = true;
           e =empleado;
           break;
       }
   } 
//       if (encontrado) {
          // mostrar en el labelEmpleado su nombre 
//           lblEmpleado.setText("Bienvenido : "+e.getNombre()); 
          // capturo la imagen y la muestro en el lbl
//          Image img =  miPlayer.capturaFoto(this.getPlayer());
//          Icon iconoAdaptado= new ImageIcon(img.getScaledInstance(lbllFotoUser.getWidth(),lbllFotoUser.getHeight(),Image.SCALE_DEFAULT)); 
//          lbllFotoUser.setIcon(iconoAdaptado);//  si manda en pantalla
          // hay que convertir la imagen a byte[] por medio de un puente 
          // crear la imagen en src y de ahi lo paso a  archivo y luego a byte
//          miPlayer.guardaImagenEnFichero(img, new File("src/imagTester"));
//          // capturo la imagen guardada en el src y lo llevo a la bd
//          File file = new File("src/imagTester");
//          byte[] imgByte = new byte[(int) file.length()];
//           try {
//	        FileInputStream fileInputStream = new FileInputStream(file);
//	        //convert file into array of bytes
//	        fileInputStream.read(imgByte);
//	        fileInputStream.close();
//        } catch (Exception ex) {
//	        ex.printStackTrace();
//        }
           
//           String elegir = (String)cmbElegir.getSelectedItem();
//          // creoo un objeto asistencia
//           Asistencia asistencia =  new Asistencia(elegir,imgByte ,new Date(), new Date());
//           asistencia.setEmpleado(e);
//           //agrego en la bd
//           AsistenciaDao asistencias = new AsistenciaDaoImp();
//           asistencias.addAsistencia(asistencia);
//          
//            
//        // muestro en la tabla las asistencias  
//        
//         Set<Asistencia> conjuntoAsistencia =empleados.getEmpleado(e.getIdEmpleado()).getAsistencias();
//        // es necesario hacer esto para que me ordene por idAssitencia
//         conjunto = new TreeSet<Asistencia>(new OrdenarAsistenciaPorId());
//         conjunto.addAll(conjuntoAsistencia);
//         
////         TablaUtil.prepararTablaAsambleas(modelo, tablaAsistencia); 
////         TablaUtil.cargarModeloAsistencia(modelo,conjunto , tablaAsistencia);
////         
//         }else{
//           JOptionPane.showMessageDialog(this, "Error de validacion , ingrese de nuevo sus datos","Error",JOptionPane.ERROR_MESSAGE);
//           txtLegajo.setText("");
//           txtClave.setText("");
//           cmbElegir.setSelectedItem("Elegir");
//       }
//    }                                       
    }//GEN-LAST:event_btnIreportActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
      // validar el empleado
        
        EmpleadoDao empleados = new EmpleadoDaoImp();
        List<Empleado> listaEmpleado = empleados.listarEmpleado();
        Empleado e = new Empleado()  ;
        boolean encontrado = false;      
        
         
        if (cmbBusqueda.getSelectedIndex()==1) {
           //busqueda empleado por legajo
           //e= getEmpleado(Integer.parseInt(txtBusqueda.getText()), listaEmpleado);
           encontrado = getBooleanEmpleado(Integer.parseInt(txtBusqueda.getText()), listaEmpleado);
           if (encontrado) {
            // muestro en la tabla las asistencias entre las fechas  indicadas
            
            e = empleados.getEmpleado(Integer.parseInt(txtBusqueda.getText()));
            Set<Asistencia> conjuntoAsistencia= e.getAsistencias();
            
           for (Iterator<Asistencia> it = e.getAsistencias().iterator(); it.hasNext();) {
              Asistencia asistencia = it.next();
//             System.out.println(  dateFin.getDate().getDate()); dia 
//               System.out.println( dateFin.getDate().getMonth()+1); mes
//               System.out.println( dateFin.getDate().getYear()+1900); año
              //filtrao por año
              
              //filtrado por mes
              
              //filtrado por dia
           
              //   if ( asistencia.getFecha().after(dateInicio.getDate()) &&  asistencia.getFecha().before(dateFin.getDate())) {
//              if (( Util.FechaUtil.getDia(asistencia.getFecha())<dateInicio.getDate().getDate()) &&
//                   ( Util.FechaUtil.getMes(asistencia.getFecha())<dateInicio.getDate().getMonth()+1)&&
//                    ( Util.FechaUtil.getAnio(asistencia.getFecha())<dateInicio.getDate().getYear()+1900)  
//                 ) {
//                conjuntoAsistencia.remove(asistencia);
//                System.out.println(asistencia.getFecha().getTime());
//                System.out.println(dateInicio.getDate().getTime());
//                
//              }
//              if ( asistencia.getFecha().after(dateInicio.getDate()) &&  asistencia.getFecha().before(dateFin.getDate())) {
//                conjuntoAsistencia.remove(asistencia);
//               
//              }
           }
           conjunto = new TreeSet<Asistencia>(new OrdenarAsistenciaPorId());
           conjunto.addAll(conjuntoAsistencia);
               //   System.out.println("cantidad de registro de asistencias  "+conjuntoAsistencia.size());
          
          }else{
            JOptionPane.showMessageDialog(this, "No existe el empleado","Error",JOptionPane.ERROR_MESSAGE);

          }
        } else {
              // Busqueda asistencias de todos los empleados
              for (Empleado empleado : listaEmpleado) {
                  for (Iterator<Asistencia> it = empleado.getAsistencias().iterator(); it.hasNext();) {
                     Asistencia asistencia = it.next();
                     if (asistencia.getFecha().getTime()>= dateInicio.getDate().getTime() && asistencia.getFecha().getTime()<= dateFin.getDate().getTime()) {
                         //conjuntoAsistencia.add(asistencia);
                      } 
         
                  }
              }
  
            }
        
                  
          // conjunto.addAll(e.getAsistencias());
         
           TablaUtil.prepararTablaAsistencia(modelo, tblAsistencia); 
           TablaUtil.cargarModeloAsistencia(modelo,conjunto , tblAsistencia);
         
   
     
        
    }//GEN-LAST:event_btnBuscarActionPerformed
    public void getFiltradoPorAño (Set<Asistencia> conjunto,Date fechaInicio, Date fechaFin){
        for (Asistencia asistencia : conjunto) {
            if(( Util.FechaUtil.getAnio(asistencia.getFecha())<fechaInicio.getYear()+1900)&&( Util.FechaUtil.getAnio(asistencia.getFecha())>fechaFin.getYear()+1900)){
                conjunto.remove(asistencia);
            }
    }
    }
    public void getFiltradoPorMes (Set<Asistencia> conjunto,Date fechaInicio, Date fechaFin){
        for (Asistencia asistencia : conjunto) {
            if(( Util.FechaUtil.getMes(asistencia.getFecha())<fechaInicio.getMonth()+1)&&( Util.FechaUtil.getMes(asistencia.getFecha())<fechaInicio.getMonth()+1)){
                conjunto.remove(asistencia);
            }
    }
    }
    private Set<Asistencia> getAsistenciasEntreFechas(Date fechaInicio, Date FechaFin, Empleado e){
     Set<Asistencia> sublist =null;
     for (Iterator<Asistencia> it = e.getAsistencias().iterator(); it.hasNext();) {
         Asistencia asistencia = it.next();
       //  if (asistencia.getFecha().getTime()>= fechaInicio.getTime() && asistencia.getFecha().getTime()<= FechaFin.getTime()) {
             sublist.add(asistencia);
        // } 
         
     }
     
     return sublist;
     
 }
    private Empleado getEmpleado(String apellido, List<Empleado> listaEmpleado){
      Empleado e=null;
      
       for ( Empleado empleado : listaEmpleado) {
                     if (empleado.getApellido().equals(apellido)) {
                        e =empleado;
                       break;
                       }
                 } 
      return e;   
    }
    private boolean getBooleanEmpleado(int legajo, List<Empleado> listaEmpleado){
      boolean e=false;
      
       for ( Empleado empleado : listaEmpleado) {
                     if (empleado.getLegajo()==legajo) {
                        e =true;
                       break;
                       }
                 } 
      return e;   
    }
//    private List<Empleado> getListaEmpleado(String apellido, List<Empleado> listaEmpleado){
//      List<Empleado> lista=null;
//      
//       for ( Empleado empleado : listaEmpleado) {
//                     if (empleado.getApellido().equals(apellido)) {
//                        lista.add(empleado);
//                       break;
//                       }
//                 } 
//      return lista;   
//    }
    private Empleado getEmpleado(int legajo ,List<Empleado> listaEmpleado ){
        Empleado e=null;
         for ( Empleado empleado : listaEmpleado) {
                     if (empleado.getLegajo()==legajo) {
                     
                       
                       e =empleado;
                       break;
                       }
                 } 
        return e;
    }
    
    private void btnBusquedaPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaPersonalActionPerformed
        BusquedaPersonal bp = new BusquedaPersonal(null, true);
        if (bp.isSeleccionado() == true);
        {
            txtBusqueda.setText(Integer.toString(bp.getEmpleado().getLegajo()));
        }
    }//GEN-LAST:event_btnBusquedaPersonalActionPerformed

    private void rdbFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFechaActionPerformed
        if (rdbFecha.isSelected())
        {
            habilitarFechas();
            
        }
    }//GEN-LAST:event_rdbFechaActionPerformed

    private void rdbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMesActionPerformed
        if (rdbMes.isSelected())
        {
            dateInicio.setDate(new Date(new Date().getYear(),new Date().getMonth(),1,0,0,0));
            dateFin.setDate(new Date(new Date().getYear(),new Date().getMonth(),new Date().getDate(),0,0,0));
            deshabilitarFechas();
            
        }
    }//GEN-LAST:event_rdbMesActionPerformed

    private void rdbHoyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHoyActionPerformed
        if (rdbHoy.isSelected())
        {
            dateInicio.setDate(new Date(new Date().getYear(),new Date().getMonth(),new Date().getDate(),0,0,0));
            dateFin.setDate(new Date(new Date().getYear(),new Date().getMonth(),new Date().getDate(),0,0,0));
            deshabilitarFechas();
            
        }
    }//GEN-LAST:event_rdbHoyActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cmbBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBusquedaItemStateChanged
     
//        if (cmbBusqueda.getSelectedIndex()==1) {
//            // busqueda de empleado por legajo
//            activarBusqueda();
//        } else {
//            if (cmbBusqueda.getSelectedIndex()==2) {
//                //busqueda por aplellido
//                activarBusqueda();
//            } else {
//                // todos los empleados
//                inactivarBusqueda();
//            }
//        }
        
        
    }//GEN-LAST:event_cmbBusquedaItemStateChanged

    private void inactivarBusqueda(){
         // dejar no editable el txtbusqueda y no activo el boton busqueda
        txtBusqueda.setEditable(false);
        btnBusquedaPersonal.setEnabled(false);
    }
    private void activarBusqueda(){
       txtBusqueda.setEditable(true);
        btnBusquedaPersonal.setEnabled(true); 
    }
    private void cmbBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBusquedaActionPerformed
       if (cmbBusqueda.getSelectedIndex()==1) {
            // busqueda de empleado por legajo
            activarBusqueda();
        } else {
              // todos los empleados
                inactivarBusqueda();
            }
        
        
        
    }//GEN-LAST:event_cmbBusquedaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListadoPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListadoPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListadoPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListadoPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListadoPersonal dialog = new ListadoPersonal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIpod btnBuscar;
    private org.edisoncor.gui.button.ButtonIcon btnBusquedaPersonal;
    private org.edisoncor.gui.button.ButtonIpod btnImprimir;
    private org.edisoncor.gui.button.ButtonIpod btnIreport;
    private org.edisoncor.gui.button.ButtonIpod btnSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.edisoncor.gui.comboBox.ComboBoxRound cmbBusqueda;
    private com.toedter.calendar.JDateChooser dateFin;
    private com.toedter.calendar.JDateChooser dateInicio;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private org.edisoncor.gui.label.LabelMetric labelMetric1;
    private org.edisoncor.gui.panel.PanelShadow panelShadow1;
    private org.edisoncor.gui.panel.PanelTranslucidoComplete2 panelTranslucidoComplete21;
    private javax.swing.JRadioButton rdbFecha;
    private javax.swing.JRadioButton rdbHoy;
    private javax.swing.JRadioButton rdbMes;
    private org.jdesktop.swingx.JXTable tblAsistencia;
    private org.edisoncor.gui.textField.TextFieldRoundIcon txtBusqueda;
    // End of variables declaration//GEN-END:variables
private void habilitarFechas()
{
    dateInicio.setEnabled(true);
    dateFin.setEnabled(true);
    
}
private void deshabilitarFechas()
{
    dateInicio.setEnabled(false);
    dateFin.setEnabled(false);
}
}
